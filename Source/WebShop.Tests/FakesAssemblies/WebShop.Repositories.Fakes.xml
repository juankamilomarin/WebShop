<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebShop.Repositories.Fakes</name>
    </assembly>
    <members>
        <member name="T:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1">
            <summary>Shim type of WebShop.Repositories.Database.DatabaseRepository`1</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.#ctor(WebShop.Repositories.Database.DatabaseRepository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.AllInstances.DbContextGet">
            <summary>Sets the shim of DatabaseRepository`1.get_DbContext()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.AllInstances.DbContextSetDbContext">
            <summary>Sets the shim of DatabaseRepository`1.set_DbContext(DbContext value)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.AllInstances.Dispose">
            <summary>Sets the shim of DatabaseRepository`1.Dispose()</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.Bind(WebShop.Repositories.Interfaces.IGenericRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.Constructor">
            <summary>Sets the shim of DatabaseRepository`1.DatabaseRepository`1()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.DbContextGet">
            <summary>Sets the shim of DatabaseRepository`1.get_DbContext()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.DbContextSetDbContext">
            <summary>Sets the shim of DatabaseRepository`1.set_DbContext(DbContext value)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDatabaseRepository`1.Dispose">
            <summary>Sets the shim of DatabaseRepository`1.Dispose()</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.ShimDbContext">
            <summary>Shim type of WebShop.Repositories.Database.DbContext</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDbContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDbContext.#ctor(WebShop.Repositories.Database.DbContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.ShimDbContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.AllInstances.ConnectionGet">
            <summary>Sets the shim of DbContext.get_Connection()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.AllInstances.ConnectionSetDbConnection">
            <summary>Sets the shim of DbContext.set_Connection(DbConnection value)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.AllInstances.Dispose">
            <summary>Sets the shim of DbContext.Dispose()</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDbContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDbContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimDbContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.ConnectionGet">
            <summary>Sets the shim of DbContext.get_Connection()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.ConnectionSetDbConnection">
            <summary>Sets the shim of DbContext.set_Connection(DbConnection value)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.Constructor">
            <summary>Sets the shim of DbContext.DbContext()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimDbContext.Dispose">
            <summary>Sets the shim of DbContext.Dispose()</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository">
            <summary>Shim type of WebShop.Repositories.Database.ProductDatabaseRepository</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.#ctor(WebShop.Repositories.Database.ProductDatabaseRepository)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.AllInstances.GetAll">
            <summary>Sets the shim of ProductDatabaseRepository.GetAll()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.AllInstances.InsertOrUpdateProduct">
            <summary>Sets the shim of ProductDatabaseRepository.InsertOrUpdate(Product product)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.AllInstances.MapProductsToListIDataReader">
            <summary>Sets the shim of ProductDatabaseRepository.MapProductsToList(IDataReader dataReader)</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.Bind(WebShop.Repositories.Interfaces.IGenericRepository{WebShop.Models.Product})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.Constructor">
            <summary>Sets the shim of ProductDatabaseRepository.ProductDatabaseRepository()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.GetAll">
            <summary>Sets the shim of ProductDatabaseRepository.GetAll()</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.InsertOrUpdateProduct">
            <summary>Sets the shim of ProductDatabaseRepository.InsertOrUpdate(Product product)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.ShimProductDatabaseRepository.MapProductsToListIDataReader">
            <summary>Sets the shim of ProductDatabaseRepository.MapProductsToList(IDataReader dataReader)</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1">
            <summary>Stub type of WebShop.Repositories.Database.DatabaseRepository`1</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.GetAll">
            <summary>Sets the stub of DatabaseRepository`1.GetAll()</summary>
        </member>
        <member name="F:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.GetAll01">
            <summary>Sets the stub of DatabaseRepository`1.GetAll()</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseRepository</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.InsertOrUpdate(`0)">
            <summary>Sets the stub of DatabaseRepository`1.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="F:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.InsertOrUpdateT0">
            <summary>Sets the stub of DatabaseRepository`1.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubDatabaseRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.StubDbContext">
            <summary>Stub type of WebShop.Repositories.Database.DbContext</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubDbContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubDbContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubDbContext.InitializeStub">
            <summary>Initializes a new instance of type StubDbContext</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubDbContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubDbContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository">
            <summary>Stub type of WebShop.Repositories.Database.ProductDatabaseRepository</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.GetAll">
            <summary>Sets the stub of ProductDatabaseRepository.GetAll()</summary>
        </member>
        <member name="F:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.GetAll01">
            <summary>Sets the stub of ProductDatabaseRepository.GetAll()</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.InitializeStub">
            <summary>Initializes a new instance of type StubProductDatabaseRepository</summary>
        </member>
        <member name="M:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.InsertOrUpdate(WebShop.Models.Product)">
            <summary>Sets the stub of ProductDatabaseRepository.InsertOrUpdate(Product product)</summary>
        </member>
        <member name="F:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.InsertOrUpdateProduct">
            <summary>Sets the stub of ProductDatabaseRepository.InsertOrUpdate(Product product)</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebShop.Repositories.Database.Fakes.StubProductDatabaseRepository.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1">
            <summary>Stub type of WebShop.Repositories.Interfaces.IGenericRepository`1</summary>
        </member>
        <member name="M:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.#ctor">
            <summary>Initializes a new instance of type StubIGenericRepository</summary>
        </member>
        <member name="F:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.GetAll">
            <summary>Sets the stub of IGenericRepository`1.GetAll()</summary>
        </member>
        <member name="F:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.InsertOrUpdateT0">
            <summary>Sets the stub of IGenericRepository`1.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="M:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.WebShop#Repositories#Interfaces#IGenericRepository{T}#GetAll">
            <summary>Sets the stub of IGenericRepository`1.GetAll()</summary>
        </member>
        <member name="M:WebShop.Repositories.Interfaces.Fakes.StubIGenericRepository`1.WebShop#Repositories#Interfaces#IGenericRepository{T}#InsertOrUpdate(`0)">
            <summary>Sets the stub of IGenericRepository`1.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="T:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1">
            <summary>Shim type of WebShop.Repositories.Memory.MemoryRepository`1</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.#ctor(WebShop.Repositories.Memory.MemoryRepository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.AllInstances.Dispose">
            <summary>Sets the shim of MemoryRepository`1.Dispose()</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.AllInstances.GetAll">
            <summary>Sets the shim of MemoryRepository`1.GetAll()</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.AllInstances.InsertOrUpdateT0">
            <summary>Sets the shim of MemoryRepository`1.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.Bind(WebShop.Repositories.Interfaces.IGenericRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.Constructor">
            <summary>Sets the shim of MemoryRepository`1.MemoryRepository`1()</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.Dispose">
            <summary>Sets the shim of MemoryRepository`1.Dispose()</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.GetAll">
            <summary>Sets the shim of MemoryRepository`1.GetAll()</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.InsertOrUpdateT0">
            <summary>Sets the shim of MemoryRepository`1.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimMemoryRepository`1.StaticConstructor">
            <summary>Sets the shim of MemoryRepository`1.MemoryRepository`1()</summary>
        </member>
        <member name="T:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository">
            <summary>Shim type of WebShop.Repositories.Memory.ProductMemoryRepository</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.#ctor(WebShop.Repositories.Memory.ProductMemoryRepository)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.AllInstances.GetEntityKeyProduct">
            <summary>Sets the shim of ProductMemoryRepository.GetEntityKey(Product product)</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.Bind(WebShop.Repositories.Interfaces.IGenericRepository{WebShop.Models.Product})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.Constructor">
            <summary>Sets the shim of ProductMemoryRepository.ProductMemoryRepository()</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.ShimProductMemoryRepository.GetEntityKeyProduct">
            <summary>Sets the shim of ProductMemoryRepository.GetEntityKey(Product product)</summary>
        </member>
        <member name="T:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1">
            <summary>Stub type of WebShop.Repositories.Memory.MemoryRepository`1</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.GetEntityKey(`0)">
            <summary>Sets the stub of MemoryRepository`1.GetEntityKey(!0 entity)</summary>
        </member>
        <member name="F:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.GetEntityKeyT0">
            <summary>Sets the stub of MemoryRepository`1.GetEntityKey(!0 entity)</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubMemoryRepository</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.StubMemoryRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository">
            <summary>Stub type of WebShop.Repositories.Memory.ProductMemoryRepository</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.GetEntityKey(WebShop.Models.Product)">
            <summary>Sets the stub of ProductMemoryRepository.GetEntityKey(Product product)</summary>
        </member>
        <member name="F:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.GetEntityKeyProduct">
            <summary>Sets the stub of ProductMemoryRepository.GetEntityKey(Product product)</summary>
        </member>
        <member name="M:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.InitializeStub">
            <summary>Initializes a new instance of type StubProductMemoryRepository</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebShop.Repositories.Memory.Fakes.StubProductMemoryRepository.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
